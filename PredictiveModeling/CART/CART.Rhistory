Wine <- read.csv("~/R/PASS/CART/Wine.csv")
View(Wine)
save.image("~/R/PASS/CART/CART.RData")
install.packages("rpart")
library(rpart)
View(Wine)
rm(Wine)
wine <- read.csv("~/R/PASS/PredictiveModeling/CART/Wine.csv")
View(wine)
rpart
rpart(Type ~ Alchohol + Malic_Acid, data=wine)
rpart(Type ~ Alcohol + Malic_Acid, data=wine)
wine[-179:-1000]
wine
wine <- read.csv("~/R/PASS/PredictiveModeling/CART/Wine.csv")
wine
View(wine)
head(wine)
fit <- rpart(Type ~ Alcohol + Malic_Acid, data=wine)
printcp(fit)
wine
View(wine)
tree
fit <- rpart(Type ~ Alcohol + Malic_Acid, data=wine)
fit
fit <- rpart(Type ~ Alcohol + Malic_Acid, data=wine)
head(wine)
fit <- rpart(Type ~ Alcohol + Malic_Acid + Ash + Ash_Alcalinitiy + Magnesium + Flavanoids, data=wine)
fit <- rpart(Type ~ Alcohol + Malic_Acid + Ash + Ash_Alcalinity + Magnesium + Flavanoids, data=wine)
fit <- rpart(Type ~ Alcohol + Malic_Acid + Ash + Ash_Alcalinitiy + Magnesium + Flavanoids + Nonflavanoid_Phenols + Proanthocyanins + Color_Intensity + Hue + OD280_OD315 + Proline, data=wine)
fit <- rpart(Type ~ Alcohol + Malic_Acid + Ash + Ash_Alcalinity + Magnesium + Flavanoids + Nonflavanoid_Phenols + Proanthocyanins + Color_Intensity + Hue + OD280_OD315 + Proline, data=wine)
fit <- rpart(Type ~ Alcohol + Malic_Acid + Ash + Ash_Alcalinity + Magnesium + Total_Phenols + Flavanoids + Nonflavanoid_Phenols + Proanthocyanins + Color_Intensity + Hue + OD280_OD315 + Proline, data=wine)
fit
fit <- rpart(Type ~ Alcohol + Malic_Acid + Ash + Ash_Alcalinity + Magnesium + Total_Phenols + Flavanoids + Nonflavanoid_Phenols + Proanthocyanins + Color_Intensity + Hue + OD280_OD315 + Proline, data=wine)
fit
?rpart
plot(fit)
printcp(fit)
wine
wine <- wine[1:178,]
wine <- wine[1:178,1:14]
wine
rm(wine)
rm(fit)
wine <- read.csv("~/R/PASS/PredictiveModeling/CART/Wine.csv")
View(wine)
wine <- wine[1:178,1:14]
wine
fit <- rpart(Type ~ Alcohol + Malic_Acid + Ash + Ash_Alcalinity + Magnesium + Total_Phenols + Flavanoids + Nonflavanoid_Phenols + Proanthocyanins + Color_Intensity + Hue + OD280_OD315 + Proline, data=wine)
printcp(fit)
plot(fit)
?rpart
plot(fit)
fit <- rpart(Type ~ Alcohol + Malic_Acid + Ash + Ash_Alcalinity + Magnesium + Total_Phenols + Flavanoids + Nonflavanoid_Phenols + Proanthocyanins + Color_Intensity + Hue + OD280_OD315 + Proline, data=wine, method="anova")
printcp(fit)
plot(fit)
fit <- rpart(Type ~ Alcohol + Malic_Acid + Ash + Ash_Alcalinity + Magnesium + Total_Phenols + Flavanoids + Nonflavanoid_Phenols + Proanthocyanins + Color_Intensity + Hue + OD280_OD315 + Proline, data=wine, control = rpart.control(minbucket = 1))
printcp(fit)
plot(fit)
train <- sort(sample(1:n, floor(n/2)))
set.seed(21275)
n <- nrow(wine)
train <- sort(sample(1:n, floor(n/2)))
train
nt <- sort(sample(1:n, floor(n/2)))
train <- wine[nt,]
test <- wine[-nt,]
train
test
save.image("~/R/PASS/PredictiveModeling/CART/CART.RData")
fit <- rpart(Type ~ ., data=wine, control = rpart.control(minbucket = 1))
plot(fit)
fit <- rpart(Type ~ ., data=wine, subset=train, control = rpart.control(minbucket = 1))
fit <- rpart(Type ~ ., data=wine, control = rpart.control(minbucket = 1))
fit <- rpart(Type ~ ., data=wine, subset=train,control = rpart.control(minbucket = 1))
fit <- rpart(Type ~ ., data=wine, subset=train, minbucket = 1)
fit <- rpart(Type ~ ., data=wine, control = rpart.control(minbucket = 1))
fit <- rpart(Type ~ ., data=wine, method="class", control = rpart.control(minbucket = 1))
plot(fit)
summary(fit)
fit <- rpart(Type ~ ., data=wine, method="class", control = rpart.control(minbucket = 1))
newwindow()
fit <- rpart(Type ~ ., data=wine, subset=train, method="class", control = rpart.control(minbucket = 1))
unclass(train)
class(ytain)
class(train)
?rpart
fit <- rpart(Type ~ ., data=wine, method="class", minbucket = 1)
fit <- rpart(Type ~ ., data=wine, subset=train, method="class", minbucket = 1)
fit <- rpart(Type ~ ., data=wine, subset=nt, method="class", minbucket = 1)
plot(fit)
fit <- rpart(Type ~ ., data=wine, subset=-nt, method="class", minbucket = 1)
plot(fit)
plot(fit, uniform=TRUE, compress=TRUE, margin = .2)
fancy = TRUE)
text(fit, use.n=TRUE, all = TRUE, fancy = TRUE)
?predict
predict(fit, newdata=wine[-train,], type="class")
predict(fit, newdata=wine[-nt,], type="class")
p <- predict(fit, newdata=wine[-nt,], type="class")
p
summary(p)
summary(fit)
sumary(p)
fit
printcp(fit)
library(tree)
install.packages("tree")
plotcp(fit)
pruned <- prune(fit, cp=.1)
pruned
plot(pruned, compress=TRUE, margin=.2)
text(pruned, use.n=TRUE, all=TRUE, fancy=TRUE)
predict(pruned)
predict(pruned, type="class")
predict(pruned, newdata=-nt, type="class")
predict(pruned, newdata=train[-nt,], type="class")
predict(fit, newdata=train[-nt,], type="class")
predict(fit, type="class")
predict(fit, newdata=wine[-train,], type="class")
predict(fit, newdata=wine[-nt,], type="class")
p <- predict(pruned, newdata=train[-nt,], type="class")
summary(p)
summary(fit
)
printcp(fit)
?printcp
fit2 <- rpart(Type ~ ., data=wine[-nt], method="class", model=test, minbucket = 1)
fit2 <- rpart(Type ~ ., data=wine[-nt], method="class", minbucket = 1)
summary(fit)
plotcp(fit)
printcp(fit)
View(wine)
fit
class(fit)
plot(fit)
plotcp(fit)
plot(fit)
fix(fit)
pred.rp <- predict(iris.rp,
newdata = iris.df[-train,],
type = "class")
text(fit, use.n=TRUE, all = TRUE, fancy = TRUE)
text(pruned, use.n=TRUE, all=TRUE, fancy=TRUE)
fix(fit)
plot(fit)
text(pruned, use.n=TRUE, all=TRUE, fancy=TRUE)
plot(fit)
text(fit, use.n=TRUE, all=TRUE, fancy=TRUE)
predict(fit, newdata=-nt, type="class")
predict(pruned, newdata=-nt, type="class")
?tree
install.packages("tree")
?tree
??tree
fit <- tree(Type ~ ., data=wine)
library(tree)
fit <- tree(Type ~ ., data=wine)
fit
?tree
summmary(tree)
summary(tree)
predict(fit)
summary(fit)
prune(fit)
summary(fit)
plot(fit); text(fit)
fit <- tree(Type ~ ., data=wine, subset=nt)
plot(fit); text(fit)
summary(fit)
predict(fit)
?predict
predict(fit, type="class")
predict(fit, newdata=wine[-nt], type="class")
predict(fit, newdata=wine[-nt,], type="class")
p <- predict(fit, newdata=wine[-nt,], type="class")
summary(p)
cmx
library(cmx)
sub <- c(sample(1:50, 25), sample(51:!00, 25), sample(101:150, 25))
fit <- rpart(Species ~ ., data=iris, subset=sub)
table(predict(fit, iris[-sub,], type="class"), iris[-sub, "Species"])
table(predict(fit, iris[sub,], type="class"), iris[-sub, "Species"])
table(predict(fit, iris[-sub,], type="class"), iris[-sub, "Species"])
?sample
?table
fit, iris[-sub,], type="class")
predict(fit, iris[-sub,], type="class")
fit <- rpart(Type ~ ., data=wine, subset=train, control = rpart.control(minbucket = 1))
fit <- rpart(Type ~ ., data=wine, method="class", control = rpart.control(minbucket = 1))
fit
fit <- rpart(Type ~ ., data=wine, subset=nt, method="class", minbucket = 1)
fit
plot(fit)
plot(fit); text(fit)
summary(fit)
predict(fit)
predict(fit, wine[-nt,], type=class)
predict(fit, wine[-nt,], type="class")
table(predict(fit, wine[-nt,], type="class"))
table(predict(fit, wine[-nt,], type="class"), wine[-nt, "Type"])
table(predict(fit, wine[nt,], type="class"), wine[-nt, "Type"])
table(predict(fit, wine[nt,], type="class"), wine[nt, "Type"])
?predict
?predict.rdata
fix(nt)
?rdata
??rdata
save.image("~/R/PASS/PredictiveModeling/CART/CART.RData")
table(predict(fit, wine[nt,], type="class"), wine[nt, "Type"])
table(predict(fit, wine[-nt,], type="class"), wine[-nt, "Type"])
cmx <- table(predict(fit, wine[-nt,], type="class"), wine[-nt, "Type"])
cmx
predict(fit, newdata=wine[-train,], type="class")
printcp(fit)
?printcp
printcp(pred)
printcp(fit)
p <- predict(fit, newdata=wine[-train,], type="class")
printcp(p)
plot(fit)
text(fit)
plot(fit, uniform=TRUE, compress=TRUE, margin = .2)
text(fit, use.n=TRUE, all = TRUE, fancy = TRUE)
plot(fit, uniform=TRUE, compress=TRUE, margin = .5)
plot(fit, uniform=TRUE, compress=TRUE, margin = .1)
plot(fit, uniform=TRUE, compress=TRUE, margin = .08)
plot(fit, uniform=TRUE, compress=TRUE, margin = .05)
plot(fit, uniform=TRUE, compress=TRUE, margin = .006)
text(fit, use.n=TRUE, all = TRUE, fancy = TRUE)
plot(fit, uniform=TRUE, compress=TRUE, margin = 1)
text(fit, use.n=TRUE, all = TRUE, fancy = TRUE)
plot(fit, uniform=TRUE, compress=TRUE, margin = .005)
text(fit, use.n=TRUE, all = TRUE, fancy = TRUE)
text(fit, use.n=TRUE, all = FALSE, fancy = TRUE)
text(fit, use.n=TRUE, all = FALSE, fancy = FALSE)
text(fit, use.n=TRUE, all = TRUE, fancy = FALSE)
plot(fit, uniform=TRUE, compress=TRUE, margin = .005)
text(fit, use.n=TRUE, all = TRUE, fancy = FALSE)
text(fit, use.n=TRUE, all = FALSE, fancy = FALSE)
plot(fit, uniform=TRUE, compress=TRUE, margin = .005)
text(fit, use.n=TRUE, all = FALSE, fancy = FALSE)
prp
library(prp)
install.packages("prp")
install.packages("rpart.plot")
library(rpart.plot)
prp
prp(fit)
53/89
t <- tree(Type ~ ., data=train)
summary(t)
plot(tree)
tree
t
printcp(fit)
t
summary(t)
t <- tree(Type ~ ., data=train)
1-sum(diag(class.pred))/sum(class.pred)
1-sum(diag(table(pred, test[,"Type"])))/sum(class.pred)
tab <- table(pred, test[,"Type"])
tab <- table(p, test[,"Type"])
1-sum(diag(table(tab, test[,"Type"])))/sum(tab)
1-sum(diag(table(pred, test[,"Type"])))/sum(class.pred)
1-sum(diag(tab))/sum(tab)
\newline
summary(fit)
printcp(fit)
fit
savehistory("~/R/PASS/PredictiveModeling/CART/CART.Rhistory")
